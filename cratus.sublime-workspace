{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"es",
				"es_input_nodes	(params.pp)"
			],
			[
				"el",
				"elasticsearch_nodes"
			],
			[
				"elasti",
				"elasticsearch_nodes	(elasticsearch.pp)"
			],
			[
				"elas",
				"elasticsearch_nodes	(elasticsearch.pp)"
			],
			[
				"elastics",
				"elasticsearchrole	(elasticsearchrole.rb)"
			],
			[
				"master",
				"master_eligible"
			],
			[
				"mas",
				"master_eligible	(elasticsearch.pp)"
			],
			[
				"data",
				"data_node"
			],
			[
				"loglb",
				"loglb_virtual_ip	(params.pp)"
			],
			[
				"syslog",
				"syslog_port	(params.pp)"
			],
			[
				"nxlo",
				"nxlog-patterns"
			],
			[
				"syslo",
				"syslog-filter"
			],
			[
				"log",
				"logstash::configfile"
			],
			[
				"lumb",
				"lumberjack-input"
			],
			[
				"ssl",
				"ssl_key"
			],
			[
				"ss",
				"ssl_dir	(params.pp)"
			],
			[
				"lum",
				"lumberjack_port"
			],
			[
				"hapro",
				"haproxy::listen"
			],
			[
				"logf",
				"logfilter_host	(params.pp)"
			],
			[
				"logfilter",
				"logfilter_host"
			],
			[
				"elk",
				"elk::params"
			],
			[
				"lubm",
				"lumberjack_port	(params.pp)"
			],
			[
				"logstash",
				"logstash::configfile"
			],
			[
				"irad",
				"irad"
			],
			[
				"hap",
				"haproxy::listen"
			],
			[
				"check",
				"check_haproxy"
			],
			[
				"kee",
				"keepalived_role"
			],
			[
				"ipa",
				"ipaddress	(loghaproxy.pp)"
			],
			[
				"asvp",
				"asvp-vpn-01	(vpn.pp)"
			],
			[
				"vm",
				"vmstore"
			],
			[
				"inter",
				"interval"
			],
			[
				"ex33",
				"ex3300-stack"
			],
			[
				"metri",
				"metrics-snmp.rb"
			],
			[
				"python",
				"python-ldap"
			],
			[
				"apach",
				"apache_cert_dir"
			],
			[
				"admin",
				"admin_password"
			],
			[
				"munk",
				"munkiwebadmin"
			],
			[
				"munki",
				"munkiwebadmin"
			],
			[
				"vir",
				"virtenv_dir"
			],
			[
				"virt",
				"virtenv_dir"
			],
			[
				"munkwebadmin",
				"munkiwebadmin_env"
			],
			[
				"munkiweb",
				"munkiwebadmin"
			],
			[
				"vrit",
				"virtenv_dir"
			],
			[
				"mu",
				"munkiwebadmin_env"
			],
			[
				"server",
				"server_name"
			],
			[
				"www",
				"www-data"
			],
			[
				"debia",
				"debian-installer"
			],
			[
				"bitbuc",
				"bitbucket_ip"
			],
			[
				"atl",
				"atlbitbucket"
			],
			[
				"bit",
				"bitbucket_ip"
			],
			[
				"soft",
				"software_update_url"
			],
			[
				"apa",
				"apache_cert_dir"
			],
			[
				"packag",
				"package_version"
			],
			[
				"bamboo",
				"bamboo-agent"
			],
			[
				"bamb",
				"bamboo-agent"
			],
			[
				"ser",
				"server_url"
			],
			[
				"babmoo",
				"bamboo_url"
			],
			[
				"virtualbox",
				"virtualbox_ver"
			],
			[
				"ubuntu",
				"ubuntu16"
			],
			[
				"knurld",
				"knurld"
			],
			[
				"srx",
				"srx_node"
			],
			[
				"pupp",
				"puppet_run_style"
			],
			[
				"extract",
				"extract_git_man"
			],
			[
				"cach",
				"cache_file"
			],
			[
				"back",
				"backblaze"
			],
			[
				"knu",
				"knurld_rwc"
			],
			[
				"direc",
				"directory_mask"
			],
			[
				"input",
				"input_name"
			],
			[
				"ask_for",
				"ask_for_password_delay"
			],
			[
				"file",
				"file_line	file_line"
			],
			[
				"gem",
				"gem_provider"
			],
			[
				"sshd",
				"sshd_config_bannersource"
			],
			[
				"rul",
				"rule_num"
			],
			[
				"rule",
				"rule_types"
			],
			[
				"rabbi",
				"rabbitmq_port"
			],
			[
				"BR",
				"broadcasts"
			],
			[
				"elast",
				"elasticsearch_nodes"
			],
			[
				"sshd_config_rsa",
				"sshd_config_rsa_key_location"
			],
			[
				"ignore",
				"ignore_user_known_hosts"
			],
			[
				"def",
				"defaultwindowsserver"
			],
			[
				"defau",
				"defaultwindowsserver"
			],
			[
				"subsci",
				"subscriptions"
			],
			[
				"sensu",
				"sensu-client"
			],
			[
				"sensu-plu",
				"sensu-plugins-windows"
			],
			[
				"rabit",
				"rabbitmq_vhost"
			],
			[
				"rabbit",
				"rabbitmq_vhost"
			],
			[
				"r",
				"rabbitmq_vhost"
			],
			[
				"logst",
				"logstash-forwarder"
			],
			[
				"zuma",
				"zumaserver"
			],
			[
				"disab",
				"disable_guest_account"
			],
			[
				"asv",
				"asvp-ad-05"
			],
			[
				"crypt",
				"crypt_server"
			],
			[
				"macine",
				"machine_class"
			],
			[
				"site",
				"sites-available"
			],
			[
				"cry",
				"cryp_env"
			],
			[
				"ac",
				"accept"
			],
			[
				"slams",
				"slamsworkstation"
			],
			[
				"defa",
				"defaultubuntuworkstation"
			],
			[
				"post",
				"postinstall-networkhome"
			],
			[
				"default",
				"defaultubuntuserver"
			],
			[
				"fi",
				"firewall"
			],
			[
				"gro",
				"ldap_group_nesting_level"
			],
			[
				"use",
				"use_ssl"
			],
			[
				"packa",
				"package_provider"
			],
			[
				"lab",
				"lab_x_lw"
			],
			[
				"doma",
				"domainuser"
			],
			[
				"chip",
				"chip-rdubielzig-lw"
			],
			[
				"cr",
				"cron_minute"
			],
			[
				"puppet",
				"puppet_agent"
			],
			[
				"cron",
				"cron_hour"
			],
			[
				"splay",
				"splaylimit"
			],
			[
				"p",
				"puppet_run_command"
			],
			[
				"krb5",
				"krb5_realm"
			],
			[
				"ldap",
				"ldap_default_authtok"
			],
			[
				"lda",
				"ldap_default_bind_dn"
			],
			[
				"shared",
				"sharedirectory"
			],
			[
				"googl",
				"google-chrome-stable"
			],
			[
				"no",
				"no_root_squash"
			],
			[
				"defaul",
				"defaultubuntuserver"
			],
			[
				"ba",
				"bamboo_agent"
			],
			[
				"direct",
				"directory_lightdm_present"
			],
			[
				"dschaaff",
				"dschaaff-macl"
			],
			[
				"f",
				"firewall"
			],
			[
				"mirror",
				"mirror"
			],
			[
				"securi",
				"security-ubuntu"
			],
			[
				"trusty",
				"trusty-backports"
			],
			[
				"pack",
				"package_location"
			],
			[
				"pac",
				"package_location"
			]
		]
	},
	"buffers":
	[
		{
			"file": "lib/cratus/version.rb",
			"settings":
			{
				"buffer_size": 55,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 357.0,
		"last_filter": "git pu",
		"selected_items":
		[
			[
				"git pu",
				"git: push"
			],
			[
				"git qiu",
				"git: quick stage current file and commit"
			],
			[
				"git pus",
				"git: push"
			],
			[
				"gitp u",
				"git: push"
			],
			[
				"git pull",
				"git: pull"
			],
			[
				"git qui",
				"git: quick stage current file and commit"
			],
			[
				"git pul",
				"git: pull"
			],
			[
				"git st",
				"git: status"
			],
			[
				"gi tpu",
				"git: push"
			],
			[
				"git piu",
				"git: push to existing branch"
			],
			[
				"gi ptu",
				"git: push"
			],
			[
				"git qu",
				"git: quick stage current file and commit"
			],
			[
				"giptu",
				"git: push"
			],
			[
				"gi tqui",
				"git: quick stage current file and commit"
			],
			[
				"git lo",
				"git: log"
			],
			[
				"git quic",
				"git: quick stage current file and commit"
			],
			[
				"gitpu",
				"git: push"
			],
			[
				"gi tpus",
				"git: push"
			],
			[
				"git",
				"git: push"
			],
			[
				"boxy",
				"Boxy Theme: Presets"
			],
			[
				"gitp ul",
				"git: pull"
			],
			[
				"gi pu",
				"git: push"
			],
			[
				"gitst",
				"git: status"
			],
			[
				"gi t pu",
				"git: push"
			],
			[
				"git push",
				"git: push"
			],
			[
				"git p",
				"git: push"
			],
			[
				"gi t",
				"git: push"
			],
			[
				"git ps",
				"git: push"
			],
			[
				"set syntax bas",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"gi tipu",
				"github: review pull request"
			],
			[
				"git pl",
				"git: pull"
			],
			[
				"gitpul",
				"git: pull"
			],
			[
				"proj",
				"Project: Close"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"colo",
				"Colorsublime: Install Theme"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"gi tpul",
				"git: pull"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"g ptu",
				"git: push all tags"
			],
			[
				"gi tpiu",
				"git: push to existing branch"
			],
			[
				"gipt u",
				"git: push"
			],
			[
				"gi tu",
				"git: push"
			],
			[
				"gi qui",
				"git: quick stage current file and commit"
			],
			[
				"set sy mark",
				"Set Syntax: MultiMarkdown"
			],
			[
				"gi br",
				"git: checkout new branch"
			],
			[
				"gi t p",
				"git: push"
			],
			[
				"git u",
				"git: push"
			],
			[
				"gti pul",
				"git: pull"
			],
			[
				"gitq",
				"git: quick stage current file and commit"
			],
			[
				"gi p",
				"git: push"
			],
			[
				"g ipu",
				"git: push"
			],
			[
				"gitp uh",
				"git: push"
			],
			[
				"git uqi",
				"git: quick stage current file and commit"
			],
			[
				"gip tu",
				"git: push"
			],
			[
				"gi tuqi",
				"git: quick stage current file and commit"
			],
			[
				"gi tqu",
				"github: review pull request"
			],
			[
				"gi u",
				"git: push"
			],
			[
				"gitp",
				"git: push"
			],
			[
				"git che",
				"git: checkout"
			],
			[
				"gi s",
				"git: status"
			],
			[
				"gi tpush",
				"git: push"
			],
			[
				"git q",
				"git: quick stage current file and commit"
			],
			[
				"g iptu",
				"git: push"
			],
			[
				"gi put",
				"git: push all tags"
			],
			[
				"gi ptush",
				"git: push"
			],
			[
				"git uq",
				"git: quick stage current file and commit"
			],
			[
				"gi ptu ",
				"git: push"
			],
			[
				"gipt iu",
				"github: open issues"
			],
			[
				"gi tst",
				"git: status"
			],
			[
				"gi tupl",
				"git: pull"
			],
			[
				"gi p u",
				"git: push"
			],
			[
				"gitpu ",
				"git: push"
			],
			[
				"gipu",
				"git: push"
			],
			[
				"g ip tu",
				"git: push"
			],
			[
				"g pu",
				"git: push"
			],
			[
				"g iput",
				"git: push all tags"
			],
			[
				"git ch",
				"git: checkout"
			],
			[
				"git ",
				"git: push"
			],
			[
				"gi st",
				"GitSavvy: help"
			],
			[
				"giput",
				"git: push all tags"
			],
			[
				"gitu",
				"git: push"
			],
			[
				"set synt tas",
				"Set Syntax: Tasks"
			],
			[
				" gi ptuh",
				"git: push"
			],
			[
				"gitp ush",
				"git: push"
			],
			[
				"gi tp u",
				"git: push"
			],
			[
				"gitu ",
				"git: push"
			],
			[
				"gi up",
				"git: push"
			],
			[
				"gi tuq",
				"git: quick stage current file and commit"
			],
			[
				"g i",
				"git: push"
			],
			[
				"gi tpuh",
				"git: push"
			],
			[
				"gitpus",
				"git: push"
			],
			[
				"gitpush",
				"git: push"
			],
			[
				"git puh",
				"git: push"
			],
			[
				"GI TQUI",
				"git: quick stage current file and commit"
			],
			[
				" gitu",
				"git: push"
			],
			[
				"gip u",
				"git: push"
			],
			[
				"giptu ",
				"git: push"
			],
			[
				"gi pul",
				"git: pull"
			],
			[
				"gi",
				"git: push"
			],
			[
				"gi tpl",
				"git: pull"
			],
			[
				"gip tuh",
				"git: push"
			],
			[
				"gi ptuh",
				"git: push"
			],
			[
				"gi tpull",
				"git: pull"
			],
			[
				"gi t pus",
				"git: push"
			],
			[
				"git upl",
				"git: pull"
			],
			[
				"g itu",
				"git: push"
			],
			[
				"git sta",
				"git: status"
			],
			[
				"gitup",
				"git: push"
			],
			[
				"gi tup",
				"git: push"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"GIT QU",
				"git: quick stage current file and commit"
			],
			[
				"gti qui",
				"git: quick stage current file and commit"
			],
			[
				"gitu p",
				"git: push"
			],
			[
				"gits",
				"git: status"
			],
			[
				"gitp us",
				"git: push"
			],
			[
				"gitupll",
				"git: pull"
			],
			[
				"gitup ",
				"git: push"
			],
			[
				"git psu",
				"git: push"
			],
			[
				"gi t st",
				"git: status"
			],
			[
				"gi pt u",
				"git: push"
			],
			[
				"g iptu ",
				"git: push"
			],
			[
				"g",
				"git: pull"
			],
			[
				"set syntax mar",
				"Set Syntax: Markdown"
			],
			[
				"set syntax pwer",
				"Set Syntax: PowerShell"
			],
			[
				"g itpu",
				"git: push"
			],
			[
				" gitpu",
				"git: push"
			]
		],
		"width": 557.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dschaaff/repositories/cratus",
		"/Users/dschaaff/repositories/cratus/bin",
		"/Users/dschaaff/repositories/cratus/lib",
		"/Users/dschaaff/repositories/cratus/lib/cratus"
	],
	"file_history":
	[
		"/Users/dschaaff/repositories/puppet/elk/lib/facter/elasticsearchrole.rb",
		"/Users/dschaaff/repositories/puppet/elk/manifests/elasticsearch.pp",
		"/Users/dschaaff/repositories/puppet/elk/manifests/apache_kibana.pp",
		"/Users/dschaaff/repositories/puppet/elk/manifests/logstash.pp",
		"/Users/dschaaff/repositories/puppet/elk/templates/elasticsearch-output.conf.erb",
		"/Users/dschaaff/repositories/puppet/elk/manifests/apache_elasticsearch.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/elasticsearch.pp",
		"/Users/dschaaff/repositories/puppet/elk/manifests/kibana.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/kibana.pp",
		"/Users/dschaaff/repositories/puppet/elk/manifests/params.pp",
		"/Users/dschaaff/repositories/puppet/jlambert121-kibana/manifests/install.pp",
		"/Users/dschaaff/repositories/puppet/control/Puppetfile",
		"/Users/dschaaff/repositories/puppet/fw/manifests/elk/elasticsearch.pp",
		"/Users/dschaaff/repositories/puppet/elk/manifests/fw/elasticsearch.pp",
		"/Users/dschaaff/repositories/puppet/elk/templates/lumberjack-output.conf.erb",
		"/Users/dschaaff/repositories/puppet/control/manifests/nodes.pp",
		"/Users/dschaaff/repositories/puppet/fw/manifests/elk/kibana.pp",
		"/Users/dschaaff/repositories/network-devices/switches/ex3300-dmz/dmz-ex3300",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/esmaster.pp",
		"/Users/dschaaff/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/dschaaff/repositories/puppet/elk/manifests/loghaproxy.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/server_settings.pp",
		"/Users/dschaaff/repositories/puppet/customfacts/lib/facter/department.rb",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/labelk.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/checks/vpn.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/sgehost.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/clients/windows.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/checks/snmp/fortigate.pp",
		"/Users/dschaaff/repositories/puppet/elk/manifests/logfilter.pp",
		"/Users/dschaaff/repositories/puppet/elk/files/syslog-filter.conf",
		"/Users/dschaaff/repositories/puppet/profile/files/tftp/firstboot-physical",
		"/Users/dschaaff/repositories/puppet/elk/templates/lumberjack-input.conf.erb",
		"/Users/dschaaff/repositories/puppet/elk/templates/logfilter-output.conf.erb",
		"/Users/dschaaff/repositories/puppet/elk/files/syslog-input.conf",
		"/Users/dschaaff/repositories/puppet/elk/templates/syslog-input.conf.erb",
		"/Users/dschaaff/repositories/puppet/elk/manifests/fw/logstash.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/logfilter.pp",
		"/Users/dschaaff/repositories/puppet/elk/files/nxlog-patterns",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/loghaproxy.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/loghaproxy.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/logstash.pp",
		"/Users/dschaaff/repositories/puppet/elk/manifests/fw.pp",
		"/Users/dschaaff/repositories/puppet/profile/files/logstash/lab/30-lumberjack-output.conf",
		"/Users/dschaaff/repositories/puppet/profile/manifests/viva.pp",
		"/Users/dschaaff/repositories/puppet/munki/manifests/params.pp",
		"/Users/dschaaff/repositories/puppet/elk/files/lumberjack-output.conf",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/logstash.pp",
		"/Users/dschaaff/repositories/puppet/syslogng/manifests/client.pp",
		"/Users/dschaaff/repositories/puppet/profile/files/logstash/lab/10-vivalog.conf",
		"/Users/dschaaff/repositories/puppet/elk/README.md",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/checks/linux.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/sudo.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/nas02_shares.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/nfshome.pp",
		"/Users/dschaaff/repositories/puppet/control/hieradata/site/Austin.yaml",
		"/Users/dschaaff/repositories/puppet/profile/templates/tftp/preseed-ubuntu14.04-amd64.cfg.erb",
		"/Users/dschaaff/repositories/puppet/control/hieradata/os/Darwin.yaml",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/pxe.pp",
		"/Users/dschaaff/repositories/puppet/nfs/templates/nfs-kernel-server.erb",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/matlabcompiler.pp",
		"/Users/dschaaff/repositories/puppet/profile/files/tftp/ubuntu16.menu",
		"/Users/dschaaff/repositories/puppet/nfs/manifests/server/ports.pp",
		"/Users/dschaaff/repositories/puppet/control/hieradata/nodes/nas02.intellisis.com.yaml",
		"/Users/dschaaff/repositories/puppet/nfs/files/nfs-kernel-server",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/zuma_server.pp",
		"/Users/dschaaff/shard",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/autofsmounts.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/nfs_routed_client.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/hermosa_server.pp",
		"/Users/dschaaff/repositories/puppet/control/hieradata/site/RedwoodCity.yaml",
		"/Users/dschaaff/repositories/puppet/dhcpconfig/manifests/rwc.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/sge_pips.pp",
		"/Users/dschaaff/repositories/puppet/fw/manifests/elk/logstash.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/confluence_server.pp",
		"/Users/dschaaff/repositories/puppet/fw/manifests/elk/keepalived.pp",
		"/Users/dschaaff/repositories/puppet/control/hieradata/nodes/ssvp-loglb-01.intellisis.com.yaml",
		"/Users/dschaaff/repositories/puppet/control/hieradata/nodes/ssvp-loglb-02.intellisis.com.yaml",
		"/Users/dschaaff/repositories/puppet/mac_config_profile/templates/com.knuedge.profile.softwareupdate.erb",
		"/Users/dschaaff/.profile",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/serverautofs.pp",
		"/Users/dschaaff/repositories/puppet/profile/files/elk/syslog-input.conf",
		"/Users/dschaaff/repositories/puppet/profile/manifests/unattendedupgrades.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/reposado.pp",
		"/Users/dschaaff/repositories/puppet/control/hieradata/os/windows.yaml",
		"/Users/dschaaff/repositories/puppet/control/hieradata/common.yaml",
		"/Users/dschaaff/repositories/puppet/control/hieradata/nodes/ad02.intellisis.com.yaml",
		"/Users/dschaaff/repositories/puppet/control/hieradata/nodes/zsvp-wsus-01.intellisis.com.yaml",
		"/Users/dschaaff/repositories/puppet/role/manifests/zumaserver.pp",
		"/Users/dschaaff/repositories/puppet/bamboo_agent/manifests/agent.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/dmzstreamflow.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/subscriptions/vpn-rwc.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/subscriptions/vpn-aus.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/openvpn.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/init.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/s2s_openvpn_client.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/subscriptions/vpn.pp",
		"/Users/dschaaff/repositories/puppet/munki/manifests/server.pp",
		"/Users/dschaaff/Desktop/interfaces",
		"/Users/dschaaff/repositories/puppet/munki/manifests/webadmin.pp",
		"/Users/dschaaff/repositories/puppet/users/manifests/macadmin.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/linux/aws/munki.pp",
		"/Users/dschaaff/repositories/puppet/munki/templates/settings.py.erb",
		"/Users/dschaaff/Desktop/test.rb",
		"/Users/dschaaff/repositories/puppet/munki/templates/munkiwebadmin-config.erb",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/checks/snmp/srx.pp",
		"/Users/dschaaff/stack_interfaces",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/hermosa_build_agent.pp",
		"/Users/dschaaff/repositories/puppet/monitoring/manifests/sensu/checks/snmp/junos_switches.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/bitbucket_server.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/aptmirror.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/mac/defaultmac.pp",
		"/Users/dschaaff/repositories/puppet/munki/manifests/init.pp",
		"/Users/dschaaff/repositories/puppet/munki/manifests/install.pp",
		"/Users/dschaaff/repositories/puppet/secure_assets/files/sshkeys/itbuild/localadmin_rsa",
		"/Users/dschaaff/repositories/puppet/secure_assets/files/sshkeys/itbuild/localadmin.pub",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/it_bamboo.pp",
		"/Users/dschaaff/repositories/puppet/role/manifests/mac/default_workstation.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/puppetboard.pp",
		"/Users/dschaaff/repositories/puppet/munki/manifests/config.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/contracts_bamboo.pp",
		"/Users/dschaaff/repositories/puppet/munki/templates/com.intellisis.munkiprefs.erb",
		"/Users/dschaaff/repositories/puppet/sssd/manifests/config.pp",
		"/Users/dschaaff/repositories/puppet/munki/templates/wsgi.py",
		"/Users/dschaaff/repositories/puppet/munki/files/createsuperuser.py",
		"/Users/dschaaff/repositories/puppet/munki/files/doesuserexist.py",
		"/Users/dschaaff/repositories/puppet/mac_config_profile/manifests/wifi.pp",
		"/Users/dschaaff/repositories/puppet/profile/manifests/linux/server_essential_packages.pp",
		"/Users/dschaaff/repositories/puppet/fw/manifests/sambafirewall.pp"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 91.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"',\n",
			"ipaddress",
			"}%>\"",
			"vmware",
			"puppetdb",
			"#",
			"pbx",
			"serverautofs",
			"hermosa",
			"haproxy",
			"84:b5:9c:8e:b0:c4",
			"vpn",
			"16",
			"group",
			"#",
			"build-essential",
			"4/0/18",
			"0/0/3",
			"document_root",
			"  \n",
			"core-router",
			"lag-trunk",
			"core-router",
			"gcc",
			"gcc-multilib",
			"terminal",
			"vpn",
			"sge",
			"scanner",
			"elk",
			"sh",
			"sphinx",
			"elasticsearch.pp",
			"elk",
			"aws",
			"labci",
			"managedmac",
			"mac_admin",
			"managedmac",
			"yum",
			"ym",
			"redis",
			"awscli",
			"owncloud",
			"uchiwa",
			"sensu",
			"mdadm",
			"sys",
			"stdlib",
			"concat",
			"managedmac",
			"google_chrome",
			"mounts",
			"dsc",
			"postgresql",
			"nxlog",
			"openssl",
			"nginx",
			"ntp",
			"multi_validate_re",
			"logstash",
			"file_concat",
			"datacat",
			"kibana",
			"logrotate",
			"pxe",
			"tftp",
			"firewall",
			"epel",
			"docker",
			"dhcp",
			"chocolatey",
			"cups",
			"aptcacherng",
			"autofs",
			"app_inventory",
			"apt",
			"acl",
			"apache",
			"mysql",
			"dsc",
			"yum",
			"vpn",
			"crucible",
			"confluence",
			"stash",
			"bambo",
			"vmware",
			"vagrant",
			"pe_gem",
			"hermosa",
			"hwe/",
			"14.04",
			"kb",
			"kbinteractive",
			"kdinteractive",
			"backup",
			"Parent>5",
			"cpu",
			"snmp",
			"ssh",
			"sge",
			"polycom",
			"san-chip",
			"knupath",
			"hip",
			"unat",
			"smtp_tls",
			"apache",
			"exchange-online-protection",
			"eop",
			"mailrelay",
			"postfix",
			"internal",
			"zone",
			"alarm",
			"ae1",
			"router",
			"vlan1",
			"router",
			"xe",
			"trunk",
			"192.168.10.4",
			"vmware",
			"router",
			"file1",
			"ae6",
			"nas01"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"docroot",
			"stash",
			"",
			"16.04",
			"postfix",
			"192.168.5.1",
			"all",
			"\"${lpgroup}\"",
			"curl",
			"chip-rdubielzig-lw",
			"present",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "lib/cratus/version.rb",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 55,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										51,
										54
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										6
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_savvy.file_path": "/Users/dschaaff/repositories/cratus/lib/cratus/version.rb",
							"git_savvy.repo_path": "/Users/dschaaff/repositories/cratus",
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 63.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 98.0
	},
	"output.git-pull":
	{
		"height": 98.0
	},
	"output.git-push":
	{
		"height": 98.0
	},
	"pinned_build_system": "",
	"project": "cratus.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"role/manifests/homeserver.pp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/Notes/notes.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
